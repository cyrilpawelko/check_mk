#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# Cyril - 28/01/2014
# Modele pour check snmp d'un seul OID. par exemple .1.3.6.1.2.1.4.5.0
# Adaptation  :
# Découper l'OID en deux, ici ".1.3.6.1.2.1.4.5" et "0" . Modifer baseoid et suboid
# ajuster crit et warn
# remplacer "zywall_zynos_ram" dans le nom des fonctions et dans les chaines

# OID a surveiller
baseoid = ".1.3.6.1.4.1.890.1.6.1.1.3"
suboid = "0"
# Valeur warn si dépassée
warn = 70
# Valeur crit si dépassé
crit = 90

def inventory_zywall_zynos_ram(info):
    if len(info) > 0:
        return [ (None, (warn, crit) ) ]

def check_zywall_zynos_ram(item, _no_params, info):
   value = int(info[0][0])
   perfdata = [ ("sessions", value, warn, crit) ]
   if value > crit:
           return (2, "RAM: %i" % value, perfdata)
   elif value > warn:
           return (1, "RAM: %i" % value, perfdata)
   else:
           return (0, "RAM: %i" % value, perfdata)

check_info["zywall_zynos_ram"] = {
        "check_function"        : check_zywall_zynos_ram,
        "service_description"   : "Zywall ZynOS RAM",
        "snmp_info"             : ( baseoid, [ suboid ] ),
        "has_perfdata"          : True,
        "inventory_function"    : inventory_zywall_zynos_ram,
        }

snmp_scan_functions["zywall_zynos_ram"] = \
	lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.890.1.2"
